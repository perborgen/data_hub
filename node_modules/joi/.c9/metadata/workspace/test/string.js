{"changed":true,"filter":false,"title":"string.js","tooltip":"/test/string.js","value":"// Load modules\n\nvar Lab = require('lab');\nvar Code = require('code');\nvar Joi = require('../lib');\nvar Helper = require('./helper');\n\n\n// Declare internals\n\nvar internals = {};\n\n\n// Test shortcuts\n\nvar lab = exports.lab = Lab.script();\nvar before = lab.before;\nvar after = lab.after;\nvar describe = lab.describe;\nvar it = lab.it;\nvar expect = Code.expect;\n\n\ndescribe('string', function () {\n\n    it('fails on boolean', function (done) {\n\n        var schema = Joi.string();\n        Helper.validate(schema, [\n            [true, false],\n            [false, false]\n        ], done);\n    });\n\n    describe('#valid', function () {\n\n        it('should throw error on input not matching type', function (done) {\n\n            expect(function () {\n\n                Joi.string().valid({});\n            }).to.throw();\n            done();\n        });\n\n        it('should not throw on input matching type', function (done) {\n\n            expect(function () {\n\n                Joi.string().valid('joi');\n            }).to.not.throw();\n            done();\n        });\n\n        it('validates case sensitive values', function (done) {\n\n            Helper.validate(Joi.string().valid('a', 'b'), [\n                ['a', true],\n                ['b', true],\n                ['A', false],\n                ['B', false]\n            ], done);\n        });\n\n        it('validates case insensitive values', function (done) {\n\n            Helper.validate(Joi.string().valid('a', 'b').insensitive(), [\n                ['a', true],\n                ['b', true],\n                ['A', true],\n                ['B', true],\n                [4, false]\n            ], done);\n        });\n\n        it('validates case insensitive values with non-strings', function (done) {\n\n            Helper.validate(Joi.string().valid('a', 'b', 5).insensitive(), [\n                ['a', true],\n                ['b', true],\n                ['A', true],\n                ['B', true],\n                [4, false],\n                [5, true]\n            ], done);\n        });\n    });\n\n    describe('#invalid', function () {\n\n        it('should throw error on input not matching type', function (done) {\n\n            expect(function () {\n\n                Joi.string().invalid({});\n            }).to.throw();\n            done();\n        });\n\n        it('should not throw on input matching type', function (done) {\n\n            expect(function () {\n\n                Joi.string().invalid('joi');\n            }).to.not.throw();\n            done();\n        });\n\n        it('invalidates case sensitive values', function (done) {\n\n            Helper.validate(Joi.string().invalid('a', 'b'), [\n                ['a', false],\n                ['b', false],\n                ['A', true],\n                ['B', true]\n            ], done);\n        });\n\n        it('invalidates case insensitive values', function (done) {\n\n            Helper.validate(Joi.string().invalid('a', 'b').insensitive(), [\n                ['a', false],\n                ['b', false],\n                ['A', false],\n                ['B', false]\n            ], done);\n        });\n    });\n\n    describe('#min', function () {\n\n        it('throws when limit is not a number', function (done) {\n\n            expect(function () {\n\n                Joi.string().min('a');\n            }).to.throw('limit must be a positive integer');\n            done();\n        });\n\n        it('throws when limit is not an integer', function (done) {\n\n            expect(function () {\n\n                Joi.string().min(1.2);\n            }).to.throw('limit must be a positive integer');\n            done();\n        });\n\n        it('enforces a limit using byte count', function (done) {\n\n            var schema = Joi.string().min(2, 'utf8');\n            Helper.validate(schema, [\n                ['\\u00bd', true],\n                ['a', false]\n            ], done);\n        });\n    });\n\n    describe('#max', function () {\n\n        it('throws when limit is not a number', function (done) {\n\n            expect(function () {\n\n                Joi.string().max('a');\n            }).to.throw('limit must be a positive integer');\n            done();\n        });\n\n        it('throws when limit is not an integer', function (done) {\n\n            expect(function () {\n\n                Joi.string().max(1.2);\n            }).to.throw('limit must be a positive integer');\n            done();\n        });\n\n        it('enforces a limit using byte count', function (done) {\n\n            var schema = Joi.string().max(1, 'utf8');\n            Helper.validate(schema, [\n                ['\\u00bd', false],\n                ['a', true]\n            ], done);\n        });\n    });\n\n    describe('#creditCard', function () {\n\n        it('should validate credit card', function (done) {\n\n            var t = Joi.string().creditCard();\n            t.validate('4111111111111112', function (err, value) {\n\n                expect(err.message).to.equal('value must be a credit card');\n\n                Helper.validate(t, [\n                    ['378734493671000', true],  // american express\n                    ['371449635398431', true],  // american express\n                    ['378282246310005', true],  // american express\n                    ['341111111111111', true],  // american express\n                    ['5610591081018250', true], // australian bank\n                    ['5019717010103742', true], // dankort pbs\n                    ['38520000023237', true],   // diners club\n                    ['30569309025904', true],   // diners club\n                    ['6011000990139424', true], // discover\n                    ['6011111111111117', true], // discover\n                    ['6011601160116611', true], // discover\n                    ['3566002020360505', true], // jbc\n                    ['3530111333300000', true], // jbc\n                    ['5105105105105100', true], // mastercard\n                    ['5555555555554444', true], // mastercard\n                    ['5431111111111111', true], // mastercard\n                    ['6331101999990016', true], // switch/solo paymentech\n                    ['4222222222222', true],    // visa\n                    ['4012888888881881', true], // visa\n                    ['4111111111111111', true], // visa\n                    ['4111111111111112', false],\n                    [null, false],\n                ], done);\n            });\n        });\n    });\n\n    describe('#length', function () {\n\n        it('throws when limit is not a number', function (done) {\n\n            expect(function () {\n\n                Joi.string().length('a');\n            }).to.throw('limit must be a positive integer');\n            done();\n        });\n\n        it('throws when limit is not an integer', function (done) {\n\n            expect(function () {\n\n                Joi.string().length(1.2);\n            }).to.throw('limit must be a positive integer');\n            done();\n        });\n\n        it('enforces a limit using byte count', function (done) {\n\n            var schema = Joi.string().length(2, 'utf8');\n            Helper.validate(schema, [\n                ['\\u00bd', true],\n                ['a', false]\n            ], done);\n        });\n    });\n\n    describe('#hostname', function () {\n\n        it('validates hostnames', function (done) {\n\n            var schema = Joi.string().hostname();\n            Helper.validate(schema, [\n                ['www.example.com', true],\n                ['domain.local', true],\n                ['3domain.local', true],\n                ['hostname', true],\n                ['host:name', false],\n                ['-', false],\n                ['2387628', true],\n                ['01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789', false],\n                ['::1', true],\n                ['0:0:0:0:0:0:0:1', true],\n                ['0:?:0:0:0:0:0:1', false]\n            ], done);\n        });\n    });\n\n    describe('#lowercase', function () {\n\n        it('only allows strings that are entirely lowercase', function (done) {\n\n            var schema = Joi.string().lowercase();\n            Helper.validateOptions(schema, [\n                ['this is all lowercase', true],\n                ['5', true],\n                ['lower\\tcase', true],\n                ['Uppercase', false],\n                ['MixEd cAsE', false],\n                [1, false]\n            ], { convert: false }, done);\n        });\n\n        it('coerce string to lowercase before validation', function (done) {\n\n            var schema = Joi.string().lowercase();\n            schema.validate('UPPER TO LOWER', function (err, value) {\n\n                expect(err).to.not.exist;\n                expect(value).to.equal('upper to lower');\n                done();\n            });\n        });\n\n        it('should work in combination with a trim', function (done) {\n\n            var schema = Joi.string().lowercase().trim();\n            Helper.validate(schema, [\n                [' abc', true],\n                [' ABC', true],\n                ['ABC', true],\n                [1, false]\n            ], done);\n        });\n    });\n\n    describe('#uppercase', function () {\n\n        it('only allow strings that are entirely uppercase', function (done) {\n\n            var schema = Joi.string().uppercase();\n            Helper.validateOptions(schema, [\n                ['THIS IS ALL UPPERCASE', true],\n                ['5', true],\n                ['UPPER\\nCASE', true],\n                ['lOWERCASE', false],\n                ['MixEd cAsE', false],\n                [1, false]\n            ], { convert: false }, done);\n        });\n\n        it('coerce string to uppercase before validation', function (done) {\n\n            var schema = Joi.string().uppercase();\n            schema.validate('lower to upper', function (err, value) {\n\n                expect(err).to.not.exist;\n                expect(value).to.equal('LOWER TO UPPER');\n                done();\n            });\n        });\n\n        it('works in combination with a forced trim', function (done) {\n\n            var schema = Joi.string().uppercase().trim();\n            Helper.validate(schema, [\n                [' abc', true],\n                [' ABC', true],\n                ['ABC', true],\n                [1, false]\n            ], done);\n        });\n    });\n\n    describe('#trim', function () {\n\n        it('only allow strings that have no leading or trailing whitespace', function (done) {\n\n            var schema = Joi.string().trim();\n            Helper.validateOptions(schema, [\n                [' something', false],\n                ['something ', false],\n                ['something\\n', false],\n                ['some thing', true],\n                ['something', true]\n            ], { convert: false }, done);\n        });\n\n        it('removes leading and trailing whitespace before validation', function (done) {\n\n            var schema = Joi.string().trim();\n            schema.validate(' trim this ', function (err, value) {\n\n                expect(err).to.not.exist;\n                expect(value).to.equal('trim this');\n                done();\n            });\n        });\n\n        it('removes leading and trailing whitespace before validation', function (done) {\n\n            var schema = Joi.string().trim().allow('');\n            schema.validate('     ', function (err, value) {\n\n                expect(err).to.not.exist;\n                expect(value).to.equal('');\n                done();\n            });\n        });\n\n        it('should work in combination with min', function (done) {\n\n            var schema = Joi.string().min(4).trim();\n            Helper.validate(schema, [\n                [' a ', false],\n                ['abc ', false],\n                ['abcd ', true]\n            ], done);\n        });\n\n        it('should work in combination with max', function (done) {\n\n            var schema = Joi.string().max(4).trim();\n            Helper.validate(schema, [\n                [' abcde ', false],\n                ['abc ', true],\n                ['abcd ', true]\n            ], done);\n        });\n\n        it('should work in combination with length', function (done) {\n\n            var schema = Joi.string().length(4).trim();\n            Helper.validate(schema, [\n                [' ab ', false],\n                ['abc ', false],\n                ['abcd ', true]\n            ], done);\n        });\n\n        it('should work in combination with a case change', function (done) {\n\n            var schema = Joi.string().trim().lowercase();\n            Helper.validate(schema, [\n                [' abc', true],\n                [' ABC', true],\n                ['ABC', true]\n            ], done);\n        });\n    });\n\n    describe('#regex', function () {\n\n        it('should not include a pattern name by default', function (done) {\n\n            var schema = Joi.string().regex(/[a-z]+/).regex(/[0-9]+/);\n            schema.validate('abcd', function (err, value) {\n\n                expect(err.message).to.contain('required pattern');\n                done();\n            });\n        });\n\n        it('should include a pattern name if specified', function (done) {\n\n            var schema = Joi.string().regex(/[a-z]+/, 'letters').regex(/[0-9]+/, 'numbers');\n            schema.validate('abcd', function (err, value) {\n\n                expect(err.message).to.contain('numbers pattern');\n                done();\n            });\n        });\n    });\n\n    describe('#validate', function () {\n\n        it('should, by default, allow undefined, deny empty string', function (done) {\n\n            Helper.validate(Joi.string(), [\n                [undefined, true],\n                ['', false]\n            ], done);\n        });\n\n        it('should, when .required(), deny undefined, deny empty string', function (done) {\n\n            Helper.validate(Joi.string().required(), [\n                [undefined, false],\n                ['', false]\n            ], done);\n        });\n\n        it('should, when .required(), print a friend error message for an empty string', function (done) {\n\n            var schema = Joi.string().required();\n            Joi.compile(schema).validate('', function (err, value) {\n\n                expect(err.message).to.contain('be empty');\n                done();\n            });\n        });\n\n        it('should, when .required(), validate non-empty strings', function (done) {\n\n            var schema = Joi.string().required();\n            Helper.validate(schema, [\n                ['test', true],\n                ['0', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates invalid values', function (done) {\n\n            var schema = Joi.string().invalid('a', 'b', 'c');\n            Helper.validate(schema, [\n                ['x', true],\n                ['a', false],\n                ['c', false]\n            ], done);\n        });\n\n        it('should invalidate invalid values', function (done) {\n\n            var schema = Joi.string().valid('a', 'b', 'c');\n            Helper.validate(schema, [\n                ['x', false],\n                ['a', true],\n                ['c', true]\n            ], done);\n        });\n\n        it('validates array arguments correctly', function (done) {\n\n            var schema = Joi.string().valid(['a', 'b', 'c']);\n            Helper.validate(schema, [\n                ['x', false],\n                ['a', true],\n                ['c', true]\n            ], done);\n        });\n\n        it('validates minimum length when min is used', function (done) {\n\n            var schema = Joi.string().min(3);\n            Helper.validate(schema, [\n                ['test', true],\n                ['0', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates minimum length when min is 0', function (done) {\n\n            var schema = Joi.string().min(0).required();\n            Helper.validate(schema, [\n                ['0', true],\n                [null, false],\n                [undefined, false]\n            ], done);\n        });\n\n        it('should return false with minimum length and a null value passed in', function (done) {\n\n            var schema = Joi.string().min(3);\n            Helper.validate(schema, [\n                [null, false]\n            ], done);\n        });\n\n        it('null allowed overrides min length requirement', function (done) {\n\n            var schema = Joi.string().min(3).allow(null);\n            Helper.validate(schema, [\n                [null, true]\n            ], done);\n        });\n\n        it('validates maximum length when max is used', function (done) {\n\n            var schema = Joi.string().max(3);\n            Helper.validate(schema, [\n                ['test', false],\n                ['0', true],\n                [null, false]\n            ], done);\n        });\n\n        it('should return true with max and not required when value is undefined', function (done) {\n\n            var schema = Joi.string().max(3);\n            Helper.validate(schema, [\n                [undefined, true]\n            ], done);\n        });\n\n        it('validates length requirements', function (done) {\n\n            var schema = Joi.string().length(3);\n            Helper.validate(schema, [\n                ['test', false],\n                ['0', false],\n                [null, false],\n                ['abc', true]\n            ], done);\n        });\n\n        it('validates regex', function (done) {\n\n            var schema = Joi.string().regex(/^[0-9][-][a-z]+$/);\n            Helper.validate(schema, [\n                ['van', false],\n                ['0-www', true]\n            ], done);\n        });\n\n        it('validates regex (ignoring global flag)', function (done) {\n\n            var schema = Joi.string().regex(/a/g);\n            Helper.validate(schema, [\n                ['ab', true],\n                ['ac', true]\n            ], done);\n        });\n\n        it('validates token', function (done) {\n\n            var schema = Joi.string().token();\n            Helper.validate(schema, [\n                ['w0rld_of_w4lm4rtl4bs', true],\n                ['w0rld of_w4lm4rtl4bs', false],\n                ['abcd#f?h1j orly?', false]\n            ], done);\n        });\n\n        it('validates alphanum', function (done) {\n\n            var schema = Joi.string().alphanum();\n            Helper.validate(schema, [\n                ['w0rld of w4lm4rtl4bs', false],\n                ['w0rldofw4lm4rtl4bs', true],\n                ['abcd#f?h1j orly?', false]\n            ], done);\n        });\n\n        it('validates email', function (done) {\n\n            var schema = Joi.string().email();\n            Helper.validate(schema, [\n                ['joe@example.com', true],\n                ['\"joe\"@example.com', true],\n                ['@iaminvalid.com', false],\n                ['joe@[IPv6:2a00:1450:4001:c02::1b]', true],\n                ['12345678901234567890123456789012345678901234567890123456789012345@walmartlabs.com', false],\n                ['123456789012345678901234567890123456789012345678901234567890@12345678901234567890123456789012345678901234567890123456789.12345678901234567890123456789012345678901234567890123456789.12345678901234567890123456789012345678901234567890123456789.12345.toolong.com', false]\n            ], done);\n        });\n\n        it('validates email with a friendly error message', function (done) {\n\n            var schema = { item: Joi.string().email() };\n            Joi.compile(schema).validate({ item: 'something' }, function (err, value) {\n\n                expect(err.message).to.contain('must be a valid email');\n                done();\n            });\n        });\n\n        it('should return false for denied value', function (done) {\n\n            var text = Joi.string().invalid('joi');\n            text.validate('joi', function (err, value) {\n\n                expect(err).to.exist;\n                done();\n            });\n        });\n\n        it('should return true for allowed value', function (done) {\n\n            var text = Joi.string().allow('hapi');\n            text.validate('result', function (err, value) {\n\n                expect(err).to.not.exist;\n                done();\n            });\n        });\n\n        it('validates with one validator (min)', function (done) {\n\n            var text = Joi.string().min(3);\n            text.validate('joi', function (err, value) {\n\n                expect(err).to.not.exist;\n                done();\n            });\n        });\n\n        it('validates with two validators (min, required)', function (done) {\n\n            var text = Joi.string().min(3).required();\n            text.validate('joi', function (err, value) {\n\n                expect(err).to.not.exist;\n\n                text.validate('', function (err, value) {\n\n                    expect(err).to.exist;\n                    done();\n                });\n            });\n        });\n\n        it('validates null with allow(null)', function (done) {\n\n            Helper.validate(Joi.string().allow(null), [\n                [null, true]\n            ], done);\n        });\n\n        it('validates \"\" (empty string) with allow(\\'\\')', function (done) {\n\n            Helper.validate(Joi.string().allow(''), [\n                ['', true],\n                ['', true]\n            ], done);\n        });\n\n        it('validates combination of required and min', function (done) {\n\n            var rule = Joi.string().required().min(3);\n            Helper.validate(rule, [\n                ['x', false],\n                ['123', true],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of required and max', function (done) {\n\n            var rule = Joi.string().required().max(3);\n            Helper.validate(rule, [\n                ['x', true],\n                ['123', true],\n                ['1234', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of allow(\\'\\') and min', function (done) {\n\n            var rule = Joi.string().allow('').min(3);\n            Helper.validate(rule, [\n                ['x', false],\n                ['123', true],\n                ['1234', true],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of allow(\\'\\') and max', function (done) {\n\n            var rule = Joi.string().allow('').max(3);\n            Helper.validate(rule, [\n                ['x', true],\n                ['123', true],\n                ['1234', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of null allowed and max', function (done) {\n            var rule = Joi.string().allow(null).max(3);\n            Helper.validate(rule, [\n                ['x', true],\n                ['123', true],\n                ['1234', false],\n                ['', false],\n                [null, true]\n            ], done);\n        });\n\n        it('validates combination of min and max', function (done) {\n\n            var rule = Joi.string().min(2).max(3);\n            Helper.validate(rule, [\n                ['x', false],\n                ['123', true],\n                ['1234', false],\n                ['12', true],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of min, max, and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().min(2).max(3).allow('');\n            Helper.validate(rule, [\n                ['x', false],\n                ['123', true],\n                ['1234', false],\n                ['12', true],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of min, max, and required', function (done) {\n\n            var rule = Joi.string().min(2).max(3).required();\n            Helper.validate(rule, [\n                ['x', false],\n                ['123', true],\n                ['1234', false],\n                ['12', true],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of min, max, and regex', function (done) {\n\n            var rule = Joi.string().min(2).max(3).regex(/^a/);\n            Helper.validate(rule, [\n                ['x', false],\n                ['123', false],\n                ['1234', false],\n                ['12', false],\n                ['ab', true],\n                ['abc', true],\n                ['abcd', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of min, max, regex, and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().min(2).max(3).regex(/^a/).allow('');\n            Helper.validate(rule, [\n                ['x', false],\n                ['123', false],\n                ['1234', false],\n                ['12', false],\n                ['ab', true],\n                ['abc', true],\n                ['abcd', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of min, max, regex, and required', function (done) {\n\n            var rule = Joi.string().min(2).max(3).regex(/^a/).required();\n            Helper.validate(rule, [\n                ['x', false],\n                ['123', false],\n                ['1234', false],\n                ['12', false],\n                ['ab', true],\n                ['abc', true],\n                ['abcd', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of min, max, and alphanum', function (done) {\n\n            var rule = Joi.string().min(2).max(3).alphanum();\n            Helper.validate(rule, [\n                ['x', false],\n                ['123', true],\n                ['1234', false],\n                ['12', true],\n                ['ab', true],\n                ['abc', true],\n                ['abcd', false],\n                ['*ab', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of min, max, alphanum, and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().min(2).max(3).alphanum().allow('');\n            Helper.validate(rule, [\n                ['x', false],\n                ['123', true],\n                ['1234', false],\n                ['12', true],\n                ['ab', true],\n                ['abc', true],\n                ['abcd', false],\n                ['*ab', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of min, max, alphanum, and required', function (done) {\n\n            var rule = Joi.string().min(2).max(3).alphanum().required();\n            Helper.validate(rule, [\n                ['x', false],\n                ['123', true],\n                ['1234', false],\n                ['12', true],\n                ['ab', true],\n                ['abc', true],\n                ['abcd', false],\n                ['*ab', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of min, max, alphanum, and regex', function (done) {\n\n            var rule = Joi.string().min(2).max(3).alphanum().regex(/^a/);\n            Helper.validate(rule, [\n                ['x', false],\n                ['123', false],\n                ['1234', false],\n                ['12', false],\n                ['ab', true],\n                ['abc', true],\n                ['a2c', true],\n                ['abcd', false],\n                ['*ab', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of min, max, alphanum, required, and regex', function (done) {\n\n            var rule = Joi.string().min(2).max(3).alphanum().required().regex(/^a/);\n            Helper.validate(rule, [\n                ['x', false],\n                ['123', false],\n                ['1234', false],\n                ['12', false],\n                ['ab', true],\n                ['abc', true],\n                ['a2c', true],\n                ['abcd', false],\n                ['*ab', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of min, max, alphanum, allow(\\'\\'), and regex', function (done) {\n\n            var rule = Joi.string().min(2).max(3).alphanum().allow('').regex(/^a/);\n            Helper.validate(rule, [\n                ['x', false],\n                ['123', false],\n                ['1234', false],\n                ['12', false],\n                ['ab', true],\n                ['abc', true],\n                ['a2c', true],\n                ['abcd', false],\n                ['*ab', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of email and min', function (done) {\n\n            var rule = Joi.string().email().min(8);\n            Helper.validate(rule, [\n                ['x@x.com', false],\n                ['123@x.com', true],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of email, min, and max', function (done) {\n\n            var rule = Joi.string().email().min(8).max(10);\n            Helper.validate(rule, [\n                ['x@x.com', false],\n                ['123@x.com', true],\n                ['1234@x.com', true],\n                ['12345@x.com', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of email, min, max, and invalid', function (done) {\n\n            var rule = Joi.string().email().min(8).max(10).invalid('123@x.com');\n            Helper.validate(rule, [\n                ['x@x.com', false],\n                ['123@x.com', false],\n                ['1234@x.com', true],\n                ['12345@x.com', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of email, min, max, and allow', function (done) {\n\n            var rule = Joi.string().email().min(8).max(10).allow('x@x.com');\n            Helper.validate(rule, [\n                ['x@x.com', true],\n                ['123@x.com', true],\n                ['1234@x.com', true],\n                ['12345@x.com', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of email, min, max, allow, and invalid', function (done) {\n\n            var rule = Joi.string().email().min(8).max(10).allow('x@x.com').invalid('123@x.com');\n            Helper.validate(rule, [\n                ['x@x.com', true],\n                ['123@x.com', false],\n                ['1234@x.com', true],\n                ['12345@x.com', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of email, min, max, allow, invalid, and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().email().min(8).max(10).allow('x@x.com').invalid('123@x.com').allow('');\n            Helper.validate(rule, [\n                ['x@x.com', true],\n                ['123@x.com', false],\n                ['1234@x.com', true],\n                ['12345@x.com', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of email, min, max, allow, and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().email().min(8).max(10).allow('x@x.com').allow('');\n            Helper.validate(rule, [\n                ['x@x.com', true],\n                ['123@x.com', true],\n                ['1234@x.com', true],\n                ['12345@x.com', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of email, min, max, allow, invalid, and regex', function (done) {\n\n            var rule = Joi.string().email().min(8).max(10).allow('x@x.com').invalid('123@x.com').regex(/^1/);\n            Helper.validate(rule, [\n                ['x@x.com', true],\n                ['123@x.com', false],\n                ['1234@x.com', true],\n                ['12345@x.com', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of email, min, max, allow, invalid, regex, and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().email().min(8).max(10).allow('x@x.com').invalid('123@x.com').regex(/^1/).allow('');\n            Helper.validate(rule, [\n                ['x@x.com', true],\n                ['123@x.com', false],\n                ['1234@x.com', true],\n                ['12345@x.com', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of email, min, max, and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().email().min(8).max(10).allow('');\n            Helper.validate(rule, [\n                ['x@x.com', false],\n                ['123@x.com', true],\n                ['1234@x.com', true],\n                ['12345@x.com', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of email, min, max, and regex', function (done) {\n\n            var rule = Joi.string().email().min(8).max(10).regex(/^1234/);\n            Helper.validate(rule, [\n                ['x@x.com', false],\n                ['123@x.com', false],\n                ['1234@x.com', true],\n                ['12345@x.com', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of email, min, max, regex, and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().email().min(8).max(10).regex(/^1234/).allow('');\n            Helper.validate(rule, [\n                ['x@x.com', false],\n                ['123@x.com', false],\n                ['1234@x.com', true],\n                ['12345@x.com', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of email, min, max, regex, and required', function (done) {\n\n            var rule = Joi.string().email().min(8).max(10).regex(/^1234/).required();\n            Helper.validate(rule, [\n                ['x@x.com', false],\n                ['123@x.com', false],\n                ['1234@x.com', true],\n                ['12345@x.com', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates isoDate', function (done) {\n\n            Helper.validate(Joi.string().isoDate(), [\n                ['2013-06-07T14:21:46.295Z', true],\n                ['2013-06-07T14:21:46.295Z0', false],\n                ['2013-06-07T14:21:46.295+07:00', true],\n                ['2013-06-07T14:21:46.295+07:000', false],\n                ['2013-06-07T14:21:46.295-07:00', true],\n                ['2013-06-07T14:21:46Z', true],\n                ['2013-06-07T14:21:46Z0', false],\n                ['2013-06-07T14:21:46+07:00', true],\n                ['2013-06-07T14:21:46-07:00', true],\n                ['2013-06-07T14:21Z', true],\n                ['2013-06-07T14:21+07:00', true],\n                ['2013-06-07T14:21+07:000', false],\n                ['2013-06-07T14:21-07:00', true],\n                ['2013-06-07T14:21Z+7:00', false],\n                ['2013-06-07', true],\n                ['2013-06-07T', false],\n                ['2013-06-07T14:21', false],\n                ['1-1-2013', false]\n            ], done);\n        });\n\n        it('validates isoDate with a friendly error message', function (done) {\n\n            var schema = { item: Joi.string().isoDate() };\n            Joi.compile(schema).validate({ item: 'something' }, function (err, value) {\n\n                expect(err.message).to.contain('must be a valid ISO 8601 date');\n                done();\n            });\n        });\n\n        it('validates combination of isoDate and min', function (done) {\n\n            var rule = Joi.string().isoDate().min(23);\n            Helper.validate(rule, [\n                ['2013-06-07T14:21:46.295Z', true],\n                ['2013-06-07T14:21:46.295Z0', false],\n                ['2013-06-07T14:21:46.295+07:00', true],\n                ['2013-06-07T14:21:46.295+07:000', false],\n                ['2013-06-07T14:21:46.295-07:00', true],\n                ['2013-06-07T14:21:46Z', false],\n                ['2013-06-07T14:21:46Z0', false],\n                ['2013-06-07T14:21:46+07:00', true],\n                ['2013-06-07T14:21:46-07:00', true],\n                ['2013-06-07T14:21Z', false],\n                ['2013-06-07T14:21+07:00', false],\n                ['2013-06-07T14:21+07:000', false],\n                ['2013-06-07T14:21-07:00', false],\n                ['2013-06-07T14:21Z+7:00', false],\n                ['2013-06-07', false],\n                ['2013-06-07T', false],\n                ['2013-06-07T14:21', false],\n                ['1-1-2013', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of isoDate, min and max', function (done) {\n\n            var rule = Joi.string().isoDate().min(17).max(23);\n            Helper.validate(rule, [\n                ['2013-06-07T14:21:46.295Z', false],\n                ['2013-06-07T14:21:46.295Z0', false],\n                ['2013-06-07T14:21:46.295+07:00', false],\n                ['2013-06-07T14:21:46.295+07:000', false],\n                ['2013-06-07T14:21:46.295-07:00', false],\n                ['2013-06-07T14:21:46Z', true],\n                ['2013-06-07T14:21:46Z0', false],\n                ['2013-06-07T14:21:46+07:00', false],\n                ['2013-06-07T14:21:46-07:00', false],\n                ['2013-06-07T14:21Z', true],\n                ['2013-06-07T14:21+07:00', true],\n                ['2013-06-07T14:21+07:000', false],\n                ['2013-06-07T14:21-07:00', true],\n                ['2013-06-07T14:21Z+7:00', false],\n                ['2013-06-07', false],\n                ['2013-06-07T', false],\n                ['2013-06-07T14:21', false],\n                ['1-1-2013', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of isoDate, min, max and invalid', function (done) {\n\n            var rule = Joi.string().isoDate().min(17).max(23).invalid('2013-06-07T14:21+07:00');\n            Helper.validate(rule, [\n                ['2013-06-07T14:21:46.295Z', false],\n                ['2013-06-07T14:21:46.295Z0', false],\n                ['2013-06-07T14:21:46.295+07:00', false],\n                ['2013-06-07T14:21:46.295+07:000', false],\n                ['2013-06-07T14:21:46.295-07:00', false],\n                ['2013-06-07T14:21:46Z', true],\n                ['2013-06-07T14:21:46Z0', false],\n                ['2013-06-07T14:21:46+07:00', false],\n                ['2013-06-07T14:21:46-07:00', false],\n                ['2013-06-07T14:21Z', true],\n                ['2013-06-07T14:21+07:00', false],\n                ['2013-06-07T14:21+07:000', false],\n                ['2013-06-07T14:21-07:00', true],\n                ['2013-06-07T14:21Z+7:00', false],\n                ['2013-06-07', false],\n                ['2013-06-07T', false],\n                ['2013-06-07T14:21', false],\n                ['1-1-2013', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of isoDate, min, max and allow', function (done) {\n\n            var rule = Joi.string().isoDate().min(17).max(23).allow('2013-06-07T14:21:46.295+07:00');\n            Helper.validate(rule, [\n                ['2013-06-07T14:21:46.295Z', false],\n                ['2013-06-07T14:21:46.295Z0', false],\n                ['2013-06-07T14:21:46.295+07:00', true],\n                ['2013-06-07T14:21:46.295+07:000', false],\n                ['2013-06-07T14:21:46.295-07:00', false],\n                ['2013-06-07T14:21:46Z', true],\n                ['2013-06-07T14:21:46Z0', false],\n                ['2013-06-07T14:21:46+07:00', false],\n                ['2013-06-07T14:21:46-07:00', false],\n                ['2013-06-07T14:21Z', true],\n                ['2013-06-07T14:21+07:00', true],\n                ['2013-06-07T14:21+07:000', false],\n                ['2013-06-07T14:21-07:00', true],\n                ['2013-06-07T14:21Z+7:00', false],\n                ['2013-06-07', false],\n                ['2013-06-07T', false],\n                ['2013-06-07T14:21', false],\n                ['1-1-2013', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of isoDate, min, max, allow and invalid', function (done) {\n\n            var rule = Joi.string().isoDate().min(17).max(23).allow('2013-06-07T14:21:46.295+07:00').invalid('2013-06-07T14:21+07:00');\n            Helper.validate(rule, [\n                ['2013-06-07T14:21:46.295Z', false],\n                ['2013-06-07T14:21:46.295Z0', false],\n                ['2013-06-07T14:21:46.295+07:00', true],\n                ['2013-06-07T14:21:46.295+07:000', false],\n                ['2013-06-07T14:21:46.295-07:00', false],\n                ['2013-06-07T14:21:46Z', true],\n                ['2013-06-07T14:21:46Z0', false],\n                ['2013-06-07T14:21:46+07:00', false],\n                ['2013-06-07T14:21:46-07:00', false],\n                ['2013-06-07T14:21Z', true],\n                ['2013-06-07T14:21+07:00', false],\n                ['2013-06-07T14:21+07:000', false],\n                ['2013-06-07T14:21-07:00', true],\n                ['2013-06-07T14:21Z+7:00', false],\n                ['2013-06-07', false],\n                ['2013-06-07T', false],\n                ['2013-06-07T14:21', false],\n                ['1-1-2013', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of isoDate, min, max, allow, invalid and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().isoDate().min(17).max(23).allow('2013-06-07T14:21:46.295+07:00').invalid('2013-06-07T14:21+07:00').allow('');\n            Helper.validate(rule, [\n                ['2013-06-07T14:21:46.295Z', false],\n                ['2013-06-07T14:21:46.295Z0', false],\n                ['2013-06-07T14:21:46.295+07:00', true],\n                ['2013-06-07T14:21:46.295+07:000', false],\n                ['2013-06-07T14:21:46.295-07:00', false],\n                ['2013-06-07T14:21:46Z', true],\n                ['2013-06-07T14:21:46Z0', false],\n                ['2013-06-07T14:21:46+07:00', false],\n                ['2013-06-07T14:21:46-07:00', false],\n                ['2013-06-07T14:21Z', true],\n                ['2013-06-07T14:21+07:00', false],\n                ['2013-06-07T14:21+07:000', false],\n                ['2013-06-07T14:21-07:00', true],\n                ['2013-06-07T14:21Z+7:00', false],\n                ['2013-06-07', false],\n                ['2013-06-07T', false],\n                ['2013-06-07T14:21', false],\n                ['1-1-2013', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of isoDate, min, max, allow, invalid and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().isoDate().min(17).max(23).allow('2013-06-07T14:21:46.295+07:00').allow('');\n            Helper.validate(rule, [\n                ['2013-06-07T14:21:46.295Z', false],\n                ['2013-06-07T14:21:46.295Z0', false],\n                ['2013-06-07T14:21:46.295+07:00', true],\n                ['2013-06-07T14:21:46.295+07:000', false],\n                ['2013-06-07T14:21:46.295-07:00', false],\n                ['2013-06-07T14:21:46Z', true],\n                ['2013-06-07T14:21:46Z0', false],\n                ['2013-06-07T14:21:46+07:00', false],\n                ['2013-06-07T14:21:46-07:00', false],\n                ['2013-06-07T14:21Z', true],\n                ['2013-06-07T14:21+07:00', true],\n                ['2013-06-07T14:21+07:000', false],\n                ['2013-06-07T14:21-07:00', true],\n                ['2013-06-07T14:21Z+7:00', false],\n                ['2013-06-07', false],\n                ['2013-06-07T', false],\n                ['2013-06-07T14:21', false],\n                ['1-1-2013', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of isoDate, min, max, allow, invalid and regex', function (done) {\n\n            var rule = Joi.string().isoDate().min(17).max(23).allow('2013-06-07T14:21:46.295+07:00').invalid('2013-06-07T14:21Z').regex(/Z$/);\n            Helper.validate(rule, [\n                ['2013-06-07T14:21:46.295Z', false],\n                ['2013-06-07T14:21:46.295Z0', false],\n                ['2013-06-07T14:21:46.295+07:00', true],\n                ['2013-06-07T14:21:46.295+07:000', false],\n                ['2013-06-07T14:21:46.295-07:00', false],\n                ['2013-06-07T14:21:46Z', true],\n                ['2013-06-07T14:21:46Z0', false],\n                ['2013-06-07T14:21:46+07:00', false],\n                ['2013-06-07T14:21:46-07:00', false],\n                ['2013-06-07T14:21Z', false],\n                ['2013-06-07T14:21+07:00', false],\n                ['2013-06-07T14:21+07:000', false],\n                ['2013-06-07T14:21-07:00', false],\n                ['2013-06-07T14:21Z+7:00', false],\n                ['2013-06-07', false],\n                ['2013-06-07T', false],\n                ['2013-06-07T14:21', false],\n                ['1-1-2013', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of isoDate, min, max, allow, invalid, regex and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().isoDate().min(17).max(23).allow('2013-06-07T14:21:46.295+07:00').invalid('2013-06-07T14:21Z').regex(/Z$/).allow('');\n            Helper.validate(rule, [\n                ['2013-06-07T14:21:46.295Z', false],\n                ['2013-06-07T14:21:46.295Z0', false],\n                ['2013-06-07T14:21:46.295+07:00', true],\n                ['2013-06-07T14:21:46.295+07:000', false],\n                ['2013-06-07T14:21:46.295-07:00', false],\n                ['2013-06-07T14:21:46Z', true],\n                ['2013-06-07T14:21:46Z0', false],\n                ['2013-06-07T14:21:46+07:00', false],\n                ['2013-06-07T14:21:46-07:00', false],\n                ['2013-06-07T14:21Z', false],\n                ['2013-06-07T14:21+07:00', false],\n                ['2013-06-07T14:21+07:000', false],\n                ['2013-06-07T14:21-07:00', false],\n                ['2013-06-07T14:21Z+7:00', false],\n                ['2013-06-07', false],\n                ['2013-06-07T', false],\n                ['2013-06-07T14:21', false],\n                ['1-1-2013', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of isoDate, min, max and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().isoDate().min(17).max(23).allow('');\n            Helper.validate(rule, [\n                ['2013-06-07T14:21:46.295Z', false],\n                ['2013-06-07T14:21:46.295Z0', false],\n                ['2013-06-07T14:21:46.295+07:00', false],\n                ['2013-06-07T14:21:46.295+07:000', false],\n                ['2013-06-07T14:21:46.295-07:00', false],\n                ['2013-06-07T14:21:46Z', true],\n                ['2013-06-07T14:21:46Z0', false],\n                ['2013-06-07T14:21:46+07:00', false],\n                ['2013-06-07T14:21:46-07:00', false],\n                ['2013-06-07T14:21Z', true],\n                ['2013-06-07T14:21+07:00', true],\n                ['2013-06-07T14:21+07:000', false],\n                ['2013-06-07T14:21-07:00', true],\n                ['2013-06-07T14:21Z+7:00', false],\n                ['2013-06-07', false],\n                ['2013-06-07T', false],\n                ['2013-06-07T14:21', false],\n                ['1-1-2013', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of isoDate, min, max and regex', function (done) {\n\n            var rule = Joi.string().isoDate().min(17).max(23).regex(/Z$/);\n            Helper.validate(rule, [\n                ['2013-06-07T14:21:46.295Z', false],\n                ['2013-06-07T14:21:46.295Z0', false],\n                ['2013-06-07T14:21:46.295+07:00', false],\n                ['2013-06-07T14:21:46.295+07:000', false],\n                ['2013-06-07T14:21:46.295-07:00', false],\n                ['2013-06-07T14:21:46Z', true],\n                ['2013-06-07T14:21:46Z0', false],\n                ['2013-06-07T14:21:46+07:00', false],\n                ['2013-06-07T14:21:46-07:00', false],\n                ['2013-06-07T14:21Z', true],\n                ['2013-06-07T14:21+07:00', false],\n                ['2013-06-07T14:21+07:000', false],\n                ['2013-06-07T14:21-07:00', false],\n                ['2013-06-07T14:21Z+7:00', false],\n                ['2013-06-07', false],\n                ['2013-06-07T', false],\n                ['2013-06-07T14:21', false],\n                ['1-1-2013', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of isoDate, min, max, regex and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().isoDate().min(17).max(23).regex(/Z$/).allow('');\n            Helper.validate(rule, [\n                ['2013-06-07T14:21:46.295Z', false],\n                ['2013-06-07T14:21:46.295Z0', false],\n                ['2013-06-07T14:21:46.295+07:00', false],\n                ['2013-06-07T14:21:46.295+07:000', false],\n                ['2013-06-07T14:21:46.295-07:00', false],\n                ['2013-06-07T14:21:46Z', true],\n                ['2013-06-07T14:21:46Z0', false],\n                ['2013-06-07T14:21:46+07:00', false],\n                ['2013-06-07T14:21:46-07:00', false],\n                ['2013-06-07T14:21Z', true],\n                ['2013-06-07T14:21+07:00', false],\n                ['2013-06-07T14:21+07:000', false],\n                ['2013-06-07T14:21-07:00', false],\n                ['2013-06-07T14:21Z+7:00', false],\n                ['2013-06-07', false],\n                ['2013-06-07T', false],\n                ['2013-06-07T14:21', false],\n                ['1-1-2013', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of isoDate, min, max, regex and required', function (done) {\n\n            var rule = Joi.string().isoDate().min(17).max(23).regex(/Z$/).required();\n            Helper.validate(rule, [\n                ['2013-06-07T14:21:46.295Z', false],\n                ['2013-06-07T14:21:46.295Z0', false],\n                ['2013-06-07T14:21:46.295+07:00', false],\n                ['2013-06-07T14:21:46.295+07:000', false],\n                ['2013-06-07T14:21:46.295-07:00', false],\n                ['2013-06-07T14:21:46Z', true],\n                ['2013-06-07T14:21:46Z0', false],\n                ['2013-06-07T14:21:46+07:00', false],\n                ['2013-06-07T14:21:46-07:00', false],\n                ['2013-06-07T14:21Z', true],\n                ['2013-06-07T14:21+07:00', false],\n                ['2013-06-07T14:21+07:000', false],\n                ['2013-06-07T14:21-07:00', false],\n                ['2013-06-07T14:21Z+7:00', false],\n                ['2013-06-07', false],\n                ['2013-06-07T', false],\n                ['2013-06-07T14:21', false],\n                ['1-1-2013', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates guid', function (done) {\n\n            Helper.validate(Joi.string().guid(), [\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', true],\n                ['{B59511BD6A5F4DF09ECF562A108D8A2E}', true],\n                ['69593D62-71EA-4548-85E4-04FC71357423', true],\n                ['677E2553DD4D43B09DA77414DB1EB8EA', true],\n                ['{5ba3bba3-729a-4717-88c1-b7c4b7ba80db}', true],\n                ['{7e9081b59a6d4cc1a8c347f69fb4198d}', true],\n                ['0c74f13f-fa83-4c48-9b33-68921dd72463', true],\n                ['b4b2fb69c6244e5eb0698e0c6ec66618', true],\n                ['{283B67B2-430F-4E6F-97E6-19041992-C1B0}', false],\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D', false],\n                ['D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false]\n            ], done);\n        });\n\n        it('validates guid with a friendly error message', function (done) {\n\n            var schema = { item: Joi.string().guid() };\n            Joi.compile(schema).validate({ item: 'something' }, function (err, value) {\n\n                expect(err.message).to.contain('must be a valid GUID');\n                done();\n            });\n        });\n\n        it('validates combination of guid and min', function (done) {\n\n            var rule = Joi.string().guid().min(36);\n            Helper.validate(rule, [\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', true],\n                ['{B59511BD6A5F4DF09ECF562A108D8A2E}', false],\n                ['69593D62-71EA-4548-85E4-04FC71357423', true],\n                ['677E2553DD4D43B09DA77414DB1EB8EA', false],\n                ['{5ba3bba3-729a-4717-88c1-b7c4b7ba80db}', true],\n                ['{7e9081b59a6d4cc1a8c347f69fb4198d}', false],\n                ['0c74f13f-fa83-4c48-9b33-68921dd72463', true],\n                ['b4b2fb69c6244e5eb0698e0c6ec66618', false],\n                ['{283B67B2-430F-4E6F-97E6-19041992-C1B0}', false],\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D', false],\n                ['D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of guid, min and max', function (done) {\n\n            var rule = Joi.string().guid().min(32).max(34);\n            Helper.validate(rule, [\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['{B59511BD6A5F4DF09ECF562A108D8A2E}', true],\n                ['69593D62-71EA-4548-85E4-04FC71357423', false],\n                ['677E2553DD4D43B09DA77414DB1EB8EA', true],\n                ['{5ba3bba3-729a-4717-88c1-b7c4b7ba80db}', false],\n                ['{7e9081b59a6d4cc1a8c347f69fb4198d}', true],\n                ['0c74f13f-fa83-4c48-9b33-68921dd72463', false],\n                ['b4b2fb69c6244e5eb0698e0c6ec66618', true],\n                ['{283B67B2-430F-4E6F-97E6-19041992-C1B0}', false],\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D', false],\n                ['D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of guid, min, max and invalid', function (done) {\n\n            var rule = Joi.string().guid().min(32).max(34).invalid('b4b2fb69c6244e5eb0698e0c6ec66618');\n            Helper.validate(rule, [\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['{B59511BD6A5F4DF09ECF562A108D8A2E}', true],\n                ['69593D62-71EA-4548-85E4-04FC71357423', false],\n                ['677E2553DD4D43B09DA77414DB1EB8EA', true],\n                ['{5ba3bba3-729a-4717-88c1-b7c4b7ba80db}', false],\n                ['{7e9081b59a6d4cc1a8c347f69fb4198d}', true],\n                ['0c74f13f-fa83-4c48-9b33-68921dd72463', false],\n                ['b4b2fb69c6244e5eb0698e0c6ec66618', false],\n                ['{283B67B2-430F-4E6F-97E6-19041992-C1B0}', false],\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D', false],\n                ['D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of guid, min, max and allow', function (done) {\n\n            var rule = Joi.string().guid().min(32).max(34).allow('{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D');\n            Helper.validate(rule, [\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['{B59511BD6A5F4DF09ECF562A108D8A2E}', true],\n                ['69593D62-71EA-4548-85E4-04FC71357423', false],\n                ['677E2553DD4D43B09DA77414DB1EB8EA', true],\n                ['{5ba3bba3-729a-4717-88c1-b7c4b7ba80db}', false],\n                ['{7e9081b59a6d4cc1a8c347f69fb4198d}', true],\n                ['0c74f13f-fa83-4c48-9b33-68921dd72463', false],\n                ['b4b2fb69c6244e5eb0698e0c6ec66618', true],\n                ['{283B67B2-430F-4E6F-97E6-19041992-C1B0}', false],\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D', true],\n                ['D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of guid, min, max, allow and invalid', function (done) {\n\n            var rule = Joi.string().guid().min(32).max(34).allow('{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D').invalid('b4b2fb69c6244e5eb0698e0c6ec66618');\n            Helper.validate(rule, [\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['{B59511BD6A5F4DF09ECF562A108D8A2E}', true],\n                ['69593D62-71EA-4548-85E4-04FC71357423', false],\n                ['677E2553DD4D43B09DA77414DB1EB8EA', true],\n                ['{5ba3bba3-729a-4717-88c1-b7c4b7ba80db}', false],\n                ['{7e9081b59a6d4cc1a8c347f69fb4198d}', true],\n                ['0c74f13f-fa83-4c48-9b33-68921dd72463', false],\n                ['b4b2fb69c6244e5eb0698e0c6ec66618', false],\n                ['{283B67B2-430F-4E6F-97E6-19041992-C1B0}', false],\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D', true],\n                ['D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of guid, min, max, allow, invalid and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().guid().min(32).max(34).allow('{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D').invalid('b4b2fb69c6244e5eb0698e0c6ec66618').allow('');\n            Helper.validate(rule, [\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['{B59511BD6A5F4DF09ECF562A108D8A2E}', true],\n                ['69593D62-71EA-4548-85E4-04FC71357423', false],\n                ['677E2553DD4D43B09DA77414DB1EB8EA', true],\n                ['{5ba3bba3-729a-4717-88c1-b7c4b7ba80db}', false],\n                ['{7e9081b59a6d4cc1a8c347f69fb4198d}', true],\n                ['0c74f13f-fa83-4c48-9b33-68921dd72463', false],\n                ['b4b2fb69c6244e5eb0698e0c6ec66618', false],\n                ['{283B67B2-430F-4E6F-97E6-19041992-C1B0}', false],\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D', true],\n                ['D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of guid, min, max, allow and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().guid().min(32).max(34).allow('{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D').allow('');\n            Helper.validate(rule, [\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['{B59511BD6A5F4DF09ECF562A108D8A2E}', true],\n                ['69593D62-71EA-4548-85E4-04FC71357423', false],\n                ['677E2553DD4D43B09DA77414DB1EB8EA', true],\n                ['{5ba3bba3-729a-4717-88c1-b7c4b7ba80db}', false],\n                ['{7e9081b59a6d4cc1a8c347f69fb4198d}', true],\n                ['0c74f13f-fa83-4c48-9b33-68921dd72463', false],\n                ['b4b2fb69c6244e5eb0698e0c6ec66618', true],\n                ['{283B67B2-430F-4E6F-97E6-19041992-C1B0}', false],\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D', true],\n                ['D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of guid, min, max, allow, invalid and regex', function (done) {\n\n            var rule = Joi.string().guid().min(32).max(34).allow('{D1A5279D-B27D-4CD4-A05E-EFDD53D08').invalid('b4b2fb69c6244e5eb0698e0c6ec66618').regex(/^{7e908/);\n            Helper.validate(rule, [\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['{B59511BD6A5F4DF09ECF562A108D8A2E}', false],\n                ['69593D62-71EA-4548-85E4-04FC71357423', false],\n                ['677E2553DD4D43B09DA77414DB1EB8EA', false],\n                ['{5ba3bba3-729a-4717-88c1-b7c4b7ba80db}', false],\n                ['{7e9081b59a6d4cc1a8c347f69fb4198d}', true],\n                ['0c74f13f-fa83-4c48-9b33-68921dd72463', false],\n                ['b4b2fb69c6244e5eb0698e0c6ec66618', false],\n                ['{283B67B2-430F-4E6F-97E6-19041992-C1B0}', false],\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08', true],\n                ['D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of guid, min, max, allow, invalid, regex and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().guid().min(32).max(34).allow('{D1A5279D-B27D-4CD4-A05E-EFDD53D08').invalid('b4b2fb69c6244e5eb0698e0c6ec66618').regex(/^{7e908/).allow('');\n            Helper.validate(rule, [\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['{B59511BD6A5F4DF09ECF562A108D8A2E}', false],\n                ['69593D62-71EA-4548-85E4-04FC71357423', false],\n                ['677E2553DD4D43B09DA77414DB1EB8EA', false],\n                ['{5ba3bba3-729a-4717-88c1-b7c4b7ba80db}', false],\n                ['{7e9081b59a6d4cc1a8c347f69fb4198d}', true],\n                ['0c74f13f-fa83-4c48-9b33-68921dd72463', false],\n                ['b4b2fb69c6244e5eb0698e0c6ec66618', false],\n                ['{283B67B2-430F-4E6F-97E6-19041992-C1B0}', false],\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08', true],\n                ['D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of guid, min, max and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().guid().min(32).max(34).allow('');\n            Helper.validate(rule, [\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['{B59511BD6A5F4DF09ECF562A108D8A2E}', true],\n                ['69593D62-71EA-4548-85E4-04FC71357423', false],\n                ['677E2553DD4D43B09DA77414DB1EB8EA', true],\n                ['{5ba3bba3-729a-4717-88c1-b7c4b7ba80db}', false],\n                ['{7e9081b59a6d4cc1a8c347f69fb4198d}', true],\n                ['0c74f13f-fa83-4c48-9b33-68921dd72463', false],\n                ['b4b2fb69c6244e5eb0698e0c6ec66618', true],\n                ['{283B67B2-430F-4E6F-97E6-19041992-C1B0}', false],\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D', false],\n                ['D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of guid, min, max and regex', function (done) {\n\n            var rule = Joi.string().guid().min(32).max(34).regex(/^{7e9081/i);\n            Helper.validate(rule, [\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['{B59511BD6A5F4DF09ECF562A108D8A2E}', false],\n                ['69593D62-71EA-4548-85E4-04FC71357423', false],\n                ['677E2553DD4D43B09DA77414DB1EB8EA', false],\n                ['{5ba3bba3-729a-4717-88c1-b7c4b7ba80db}', false],\n                ['{7e9081b59a6d4cc1a8c347f69fb4198d}', true],\n                ['0c74f13f-fa83-4c48-9b33-68921dd72463', false],\n                ['b4b2fb69c6244e5eb0698e0c6ec66618', false],\n                ['{283B67B2-430F-4E6F-97E6-19041992-C1B0}', false],\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D', false],\n                ['D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of guid, min, max, regex and allow(\\'\\')', function (done) {\n\n            var rule = Joi.string().guid().min(32).max(34).regex(/^{7e9081/i).allow('');\n            Helper.validate(rule, [\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['{B59511BD6A5F4DF09ECF562A108D8A2E}', false],\n                ['69593D62-71EA-4548-85E4-04FC71357423', false],\n                ['677E2553DD4D43B09DA77414DB1EB8EA', false],\n                ['{5ba3bba3-729a-4717-88c1-b7c4b7ba80db}', false],\n                ['{7e9081b59a6d4cc1a8c347f69fb4198d}', true],\n                ['0c74f13f-fa83-4c48-9b33-68921dd72463', false],\n                ['b4b2fb69c6244e5eb0698e0c6ec66618', false],\n                ['{283B67B2-430F-4E6F-97E6-19041992-C1B0}', false],\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D', false],\n                ['D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['', true],\n                [null, false]\n            ], done);\n        });\n\n        it('validates combination of guid, min, max, regex and required', function (done) {\n\n            var rule = Joi.string().guid().min(32).max(34).regex(/^{7e9081/i).required();\n            Helper.validate(rule, [\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['{B59511BD6A5F4DF09ECF562A108D8A2E}', false],\n                ['69593D62-71EA-4548-85E4-04FC71357423', false],\n                ['677E2553DD4D43B09DA77414DB1EB8EA', false],\n                ['{5ba3bba3-729a-4717-88c1-b7c4b7ba80db}', false],\n                ['{7e9081b59a6d4cc1a8c347f69fb4198d}', true],\n                ['0c74f13f-fa83-4c48-9b33-68921dd72463', false],\n                ['b4b2fb69c6244e5eb0698e0c6ec66618', false],\n                ['{283B67B2-430F-4E6F-97E6-19041992-C1B0}', false],\n                ['{D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D', false],\n                ['D1A5279D-B27D-4CD4-A05E-EFDD53D08E8D}', false],\n                ['', false],\n                [null, false]\n            ], done);\n        });\n    });\n});\n","undoManager":{"mark":-1,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":3,"column":0},"end":{"row":3,"column":27}},"text":"var Code = require('code');"},{"action":"insertText","range":{"start":{"row":3,"column":27},"end":{"row":4,"column":0}},"text":"\n"}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":4,"column":0},"end":{"row":4,"column":0},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1415365529437}